{"version":3,"sources":["Connectors.js","components/ActivateConnectors.js","Registrar.js","EthController.js","components/GetArweaveResource.js","PublicResolver.js","components/SetArweaveComponent.js","components/ENSRegistrationComponent.js","components/ArweaveComponent.js","components/ArweaveRouterComponent.js","App.js","serviceWorker.js","index.js"],"names":["InjectedConnector","Connectors","NetworkOnlyConnector","PortisConnector","Injected","supportedNetworks","Network","providerURL","Portis","api","PortisApi","dAppId","network","ActivateConnectors","props","context","useWeb3Context","_useState","useState","_useState2","Object","slicedToArray","show","setShow","console","log","keys","connectors","source","setConnector","error","react_default","a","createElement","Fragment","Row","className","active","ButtonToolbar","style","display","alignItems","justifyContent","Button","onClick","connectorName","Modal","size","centered","onHide","Header","closeButton","Title","id","Body","href","target","unsetConnector","registrarAbi","constant","inputs","name","type","outputs","payable","anonymous","indexed","ethControllerAbi","stateMutability","GetArweaveResource","_React$useState","React","_React$useState2","arweavePage","setArweavePage","arw","Arweave","init","host","port","protocol","arweaveHash","transactions","get","then","trxn","forEach","tag","key","decode","string","value","concat","page","catch","width","height","frameborder","srcdoc","src","abi","contentHash","require","SetArweaveComponent","txid","arweaveURL","setarweaveURL","_React$useState3","domainName","_React$useState4","ensDomainName","setEnsDomainName","_React$useState5","_React$useState6","aTx","setaTx","_React$useState7","_React$useState8","ipfsError","setIpfsError","_associateArweaveWithENS","asyncToGenerator","regenerator_default","mark","_callee","arweaveUrl","signer","provider","nameHash","publicResolver","gasPrice","wrap","_context","prev","next","library","getSigner","ethers","getDefaultProvider","utils","namehash","Contract","getGasPrice","sent","setText","txHash","setContenthash","fromIpfs","ipfsCid","gasLimit","stop","apply","this","arguments","Form","onSubmit","evt","preventDefault","_x","associateArweaveWithENS","Col","Group","controlId","Label","Control","defaultValue","placeholder","onChange","Text","variant","Alert","JSON","stringify","text","link","window","location","ENSRegistrationComponent","ensSubDomainName","setEnsSubDomainName","state","per","ensSpinner","setEnsSpinner","ensDomainAvailable","setEnsDomainAvailable","_React$useState9","_React$useState10","domain","setDomain","_registerEnsSubDomain","names","subdomainNameHash","domainNameHash","registrar","split","keccak256","toUtf8Bytes","setSubnodeOwner","owner","wait","setResolver","_registerEnsDomain","_callee2","ethController","commitSecret","commitmentHash","rentPrice","minCommitTimeBN","minCommitTime","_context2","available","abrupt","formatBytes32String","makeCommitment","_address","commit","minCommitmentAge","toNumber","Promise","resolve","setTimeout","register","bigNumberify","Container","registerEnsDomain","FormControl","aria-label","aria-describedby","disabled","registerEnsSubDomain","ProgressBar","now","label","components_SetArweaveComponent","ipid","baseStyle","flex","flexDirection","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","ArweaveComponent","wallet","setWallet","balance","setBalance","data","setData","arweaveTxn","setTxn","cid","setCid","useEffect","_getBalance","getBalance","result","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","onerror","onload","event","parse","wallets","jwkToAddress","address","privateKey","contents","file","Unixfs","node","DAGNode","marshal","util","serialize","cidVersion","toBaseEncodedString","_x2","_x3","_x4","_generateTransaction","generateTransaction","txn","readAsText","_useDropzone","useDropzone","accept","isDragActive","isDragAccept","getRootProps","getInputProps","isDragReject","ar","winstonToAr","fileData","tags","transaction","createTransaction","addTag","reward","sign","_postTransaction","_callee3","response","_context3","post","status","useMemo","objectSpread","_x5","postTransaction","components_ENSRegistrationComponent","ArweaveRouterComponent","getArweaveFromENS","components_GetArweaveResource","App","react_router_dom","react_router","exact","path","render","dist_default","libraryName","components_ActivateConnectors","components_ArweaveComponent","routeProps","components_ArweaveRouterComponent","match","params","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2dd14d3.chunk.js","sourcesContent":["import { Connectors } from \"web3-react\";\n//import TrezorApi from \"trezor-connect\";\n//import WalletConnectApi from \"@walletconnect/web3-subprovider\";\n//import FortmaticApi from \"fortmatic\";\nimport PortisApi from \"@portis/web3\";\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n // TrezorConnector,\n // LedgerConnector,\n // WalletConnectConnector,\n // FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst supportedNetworkURLs = {\n  1: \"https://mainnet.infura.io/v3/\",\n  3: \"https://ropsten.infura.io/v3/c4809a978c5b48c8a5b8fdc9133cef42\",\n  4: \"https://rinkeby.infura.io/v3/\"\n};\n\n// const defaultNetwork = 1;\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [1, 3, 4]\n});\n\nconst Network = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[3]\n});\n/*\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail: \"\",\n  manifestAppUrl: \"\"\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  api: WalletConnectApi,\n  bridge: \"https://bridge.walletconnect.org\",\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: \"\",\n  logoutOnDeactivation: false\n});\n*/\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: \"c5ae5710-95ad-43ff-8d6b-e7657ab429b4\",\n  network: \"ropsten\"\n});\n\nexport default {\n  Injected,\n  Network,\n/*  Trezor,\n  Ledger,\n  WalletConnect,\n  Fortmatic,*/\n  Portis\n};\n","import React, { useState } from 'react';\nimport connectors from \"../Connectors.js\";\nimport { useWeb3Context } from \"web3-react\";\nimport { Button, Modal, Row, ButtonToolbar } from 'react-bootstrap';\n\nfunction ActivateConnectors(props) {\n  const context = useWeb3Context();\n  const [show, setShow] = useState(true);\n  const handleClose = () => setShow(false);\n\n  console.log(Object.keys(connectors));\n  if (props.source === 'router'){\n    context.setConnector('Network')\n  }\n  if (context.error) {\n    console.error(\"Error!\");\n  }\n  if (props.source === 'router')\n  {  \n    return null\n  }\n  else {\n  return (\n    <React.Fragment>\n      <Row><div className=\"container text-center\">\n        {!context.active && (\n        <ButtonToolbar style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent:'center'\n        }}>\n        <Button onClick={() => context.setConnector('Injected')}>\n            Metamask\n        </Button>\n        <Button onClick={() => context.setConnector('Portis')}>\n            Portis\n        </Button>\n        </ButtonToolbar>)}\n      </div></Row>\n      <Row><div className=\"container text-center\">\n        {context.error && (\n          <p>Something went wrong.  Please refresh the page and unlock Metamask or Portis again.</p>\n        )}\n      </div></Row>\n      <Row><div className=\"container text-center\">\n      {(context.active && (context.connectorName === 'Network')) && \n      <p>You do not currently have Metamask or Portis activated.  Please unlock Metamask or Portis in order to begin ENS domain registration process.</p>\n      }\n      </div></Row>\n      {(context.connectorName !== 'Network') &&\n      <Modal \n        size=\"lg\" \n        centered show={show} \n        onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title id='intro-modal'>First time here?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>What is ArwENS?</h4>\n          <p>\n            ArwENS is a one-stop shop for registering ENS domain/subdomains, storing text or web pages on Arweave, and then linking your\n            newly minted ENS domain to your Arweave content. \n          </p>\n          <h4>What you need to get started</h4>\n          <ol>\n            <li> A Metamask or Portis wallet</li>\n            <li> An Arweave wallet with some AR in it<br />\n            <span> Get a free one <a href=\"https://tokens.arweave.org\" target=\"_blank\">here</a> with 1 AR so you can try it out</span></li>\n            <li> Something you want to host permanently on the permaweb</li>\n          </ol>\n          <h4>How do I do this?</h4>\n          <p> The Dapp will walk you through it but below are the steps</p>\n          <ol>\n            <li> Pick an ENS domain/subdomain to register and execute the transactions needed to register<br />\n            <span>You'll be prompted a couple of times during the domain registration process.  If registering a domain name,the second transaction will include\n              the total ETH required to register the domain for 1 year.</span></li>\n            <li> Provide your Arweave key file<br />\n            <span>Note, this key file is never leaving your device.  The Dapp is just using it to talk to Arweave.</span></li>\n            <li> Upload your text/html file to the permaweb</li>\n            <li> Link your ENS domain to your permanently hosted file</li>\n            <li> Share your newly hosted page with everyone</li>\n          </ol>\n        </Modal.Body>\n      </Modal> }\n      <div className='container text-center'>\n        {((context.active && (context.connectorName === 'Network'))|| (context.error && context.connectorName)) && (\n          <Button onClick={() => context.unsetConnector()}>\n            {context.active ? \"Retry Metamask\" : \"Reset\"}\n          </Button>\n        )}\n      </div>\n    </React.Fragment>\n  );\n  }\n  \n}   \n\nexport default ActivateConnectors;\n","const registrarAbi = [\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"resolver\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"label\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setSubnodeOwner\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"ttl\",\n          \"type\": \"uint64\"\n        }\n      ],\n      \"name\": \"setTTL\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"ttl\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint64\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"resolver\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setResolver\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setOwner\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"payable\": false,\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"label\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"NewOwner\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"resolver\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"NewResolver\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"ttl\",\n          \"type\": \"uint64\"\n        }\n      ],\n      \"name\": \"NewTTL\",\n      \"type\": \"event\"\n    }\n  ]\n\n  export { registrarAbi }","const ethControllerAbi = [\n    {\n      \"constant\": false,\n      \"inputs\": [],\n      \"name\": \"renounceOwnership\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"commitments\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"MIN_REGISTRATION_DURATION\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"minCommitmentAge\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"isOwner\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"maxCommitmentAge\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"name\": \"_base\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_prices\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_minCommitmentAge\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"_maxCommitmentAge\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"label\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"cost\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"expires\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"NameRegistered\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"label\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"cost\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"expires\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"NameRenewed\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"oracle\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"NewPriceOracle\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"previousOwner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"duration\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"rentPrice\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"valid\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"available\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"secret\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"makeCommitment\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"commitment\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"commit\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"duration\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"secret\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"register\",\n      \"outputs\": [],\n      \"payable\": true,\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"duration\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"renew\",\n      \"outputs\": [],\n      \"payable\": true,\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_prices\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPriceOracle\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_minCommitmentAge\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"_maxCommitmentAge\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setCommitmentAges\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [],\n      \"name\": \"withdraw\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"interfaceID\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    }\n  ]\n\n  export { ethControllerAbi }","import React from 'react';\nimport Arweave from 'arweave/web';\n\nfunction GetArweaveResource (props) {\n\n  const [arweavePage, setArweavePage] = React.useState('')\n  const arw = Arweave.init({\n    host: 'arweave.net',\n    port: 443,\n    protocol: 'https',\n  });\n  console.log(props.arweaveHash)\n  arw.transactions.get(props.arweaveHash)\n  .then(trxn => {\n    trxn.get('tags').forEach(tag => {\n    let key = tag.get('name', {decode: true, string: true});\n    let value = tag.get('value', {decode: true, string: true});\n    console.log(`${key} : ${value}`);\n    })\n    let page = trxn.get('data', {decode: true, string: true})\n    setArweavePage(page);\n    console.log(arweavePage)\n  })\n  .catch(error => {\n    console.log(error)\n    setArweavePage('error')\n  })\n  if (arweavePage === 'error'){\n    return (\n    <React.Fragment>\n      {arweavePage === 'error' && <p>Still lost in the permaweb</p>}\n    </React.Fragment>\n    )}\n    else if (props.source === \"router\") {\n      return (<iframe width=\"100%\" height=\"100%\" frameborder=\"0\" srcdoc={arweavePage} src={'https://arweave.net/'+props.arweaveHash} >></iframe>)\n    }\n    else return null\n}\n\nexport default GetArweaveResource;\n","const abi = \n [\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"interfaceID\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"setDNSRecords\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"key\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"value\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"setText\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"interfaceID\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"interfaceImplementer\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"contentTypes\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ABI\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"x\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"y\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"setPubkey\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"hash\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"setContenthash\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"addr\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"name\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"hasDNSRecords\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"key\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"text\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"contentType\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"setABI\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"name\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"setName\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"name\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"resource\",\n          \"type\": \"uint16\"\n        }\n      ],\n      \"name\": \"dnsRecord\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"clearDNSZone\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"contenthash\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"pubkey\",\n      \"outputs\": [\n        {\n          \"name\": \"x\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"y\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"addr\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setAddr\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"interfaceID\",\n          \"type\": \"bytes4\"\n        },\n        {\n          \"name\": \"implementer\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setInterface\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"authorisations\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"name\": \"_ens\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"target\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"isAuthorised\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"AuthorisationChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"indexedKey\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"key\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"TextChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"x\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"y\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"PubkeyChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"name\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"NameChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"interfaceID\",\n          \"type\": \"bytes4\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"implementer\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"InterfaceChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"name\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"resource\",\n          \"type\": \"uint16\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"record\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"DNSRecordChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"name\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"resource\",\n          \"type\": \"uint16\"\n        }\n      ],\n      \"name\": \"DNSRecordDeleted\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"DNSZoneCleared\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"hash\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"ContenthashChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"a\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"AddrChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"contentType\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ABIChanged\",\n      \"type\": \"event\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"target\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"isAuthorised\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setAuthorisation\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n\n  export { abi }","import React from 'react';\nimport { ethers } from \"ethers\";\nimport { useWeb3Context } from \"web3-react\";\nimport GetArweaveResource from './GetArweaveResource.js'\nimport { abi } from \"../PublicResolver\"\nimport { Button, Form, Row, Col, Alert } from 'react-bootstrap'\nconst contentHash = require('content-hash')\n\nfunction SetArweaveComponent (props) {\n  const context = useWeb3Context();\n  const [arweaveURL, setarweaveURL] = React.useState(props.txid)\n  const [ensDomainName, setEnsDomainName] = React.useState(props.domainName)\n  const [aTx, setaTx] = React.useState(false)\n  const [ipfsError, setIpfsError] = React.useState()\n\n  const handleArweaveChange = evt => {\n    setarweaveURL(evt.target.value)\n    console.log('Setting URL to ' + arweaveURL)\n  }\n\n  const handleArweaveSubmit = (evt) => {\n    evt.preventDefault();\n    associateArweaveWithENS(arweaveURL)\n  }\n\n  const handleENSChange = evt => {\n    setEnsDomainName(evt.target.value)\n    console.log('Setting ensDomainName to ' + ensDomainName)\n  }\n\n  const handleENSSubmit = (evt) => {\n    evt.preventDefault();\n    console.log('An ENS Domain name of ' + ensDomainName + 'was entered')\n  }\n\n  async function associateArweaveWithENS (arweaveUrl)\n  {\n    const signer = context.library.getSigner()\n    const provider = ethers.getDefaultProvider()\n    var nameHash = ethers.utils.namehash(props.domainName)\n    console.log('Namehash of ' + props.domainName + ' is ' + nameHash)\n    const publicResolver = new ethers.Contract('0x5FfC014343cd971B7eb70732021E26C35B744cc4', abi, signer)\n    var gasPrice = await provider.getGasPrice()\n    publicResolver.setText(nameHash,'url',arweaveUrl)\n    .then(txHash => {\n      console.log('Tx hash for setting Arweave hash is: '+txHash)\n      setaTx(true)\n    })\n    .catch(error => {\n      console.log('Setting Arweave hash on ENS domain failed with error: ' + error)\n      setEnsDomainName('error')\n    })\n    publicResolver.setContenthash(nameHash,\"0x\"+contentHash.fromIpfs(props.ipfsCid),{ gasLimit: 300000, gasPrice: gasPrice })\n    .then(txHash => {\n      console.log(txHash)\n      setaTx(true)\n    })\n    .catch(error => {\n      console.log('Setting IPFS content hash failed.')\n      console.log(error)\n      setIpfsError(error)\n      setEnsDomainName('error')\n    })\n   }\n\n  function getArweaveFromENS ()  {\n    var nameHash = ethers.utils.namehash(ensDomainName)\n    const publicResolver = new ethers.Contract('0x5FfC014343cd971B7eb70732021E26C35B744cc4', abi, context.library)\n    publicResolver.text(nameHash,'url')\n    .then(link => {\n      console.log(link)\n      setarweaveURL(link)\n    })\n    .catch(error => {\n      console.log(error)\n      setarweaveURL('none')\n    })\n\n  }\n\n  if (context.active){\n    return (\n      <React.Fragment>\n        {context.connectorName !== 'Network' &&\n          <div className='container mt-4 text-center'><h3>Link ENS to hosted Arweave page</h3></div>}\n        {context.connectorName !== 'Network' &&              \n          <Form onSubmit={handleArweaveSubmit}>\n           <Row>\n            <Col>\n            <Form.Group controlId='ensDomain'>\n              <Form.Label>ENS Domain</Form.Label>\n              <Form.Control type=\"text\" defaultValue= {props.domainName} placeholder=\"alice.eth\" onChange={handleENSChange}/>\n              <Form.Text className=\"text-muted\">\n                Enter the ENS domain or subdomain you wish to link to Arweave content\n              </Form.Text>\n            </Form.Group>\n            </Col>\n           <Col>\n            <Form.Group controlId='arweaveId'>\n              <Form.Label>Arweave Transaction ID</Form.Label>\n              <Form.Control type=\"text\" defaultValue={props.txid} onChange={handleArweaveChange}/>\n              <Form.Text className=\"text-muted\">\n                Enter the Arweave transaction ID you want link to your ENS domain/subdomain\n              </Form.Text>\n            </Form.Group>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-md-center\">\n             <Button variant=\"primary\" type=\"submit\">\n               Link ENS to Arweave\n             </Button>\n             <Alert show={ensDomainName === 'error'} key='domainalert' variant='danger'>\n              Something went wrong!  Please try again. {JSON.stringify(ipfsError)}\n            </Alert>\n          </Row>\n        </Form>}\n      <Row>\n        <div className='container py-3 text-center'>\n          <Button variant=\"primary\" type=\"submit\" onClick={getArweaveFromENS}>Retrieve Arweave Resource</Button>\n        </div>\n      </Row>\n      <Row>\n        {arweaveURL !== 'none' && \n        <p>The Arweave transction ID is: {arweaveURL}</p>}\n      </Row>\n      <Row>\n        {aTx &&\n        <p>Your page is now permanently hosted on the permaweb and can be accessed from anywhere by using the below URL.\n        {window.location.href +props.domainName}</p>}\n      </Row>\n      </React.Fragment>\n    )\n  }\n  else return null\n}\n\nexport default SetArweaveComponent;\n","import React from 'react';\nimport { ethers } from \"ethers\";\nimport { useWeb3Context } from \"web3-react\";\nimport { registrarAbi } from \"../Registrar.js\"\nimport { Alert, Form, FormControl, Button, ProgressBar, Row, Col, Container } from 'react-bootstrap';\nimport { ethControllerAbi } from '../EthController.js'\nimport SetArweaveComponent from \"../components/SetArweaveComponent\"\n\nfunction ENSRegistrationComponent(props) {\n  const context = useWeb3Context();\n  const [ensSubDomainName, setEnsSubDomainName] = React.useState()\n  const [ensDomainName, setEnsDomainName] = React.useState()\n  const [ensSpinner, setEnsSpinner] = React.useState({state:'Not Started', per: 0})\n  const [ensDomainAvailable, setEnsDomainAvailable] = React.useState(true)\n  const [domain, setDomain] = React.useState()\n\n  const handleEnsSubDomainChange = evt => {\n    setEnsSubDomainName(evt.target.value)\n    setDomain(ensSubDomainName)\n    console.log('Setting ENS Domain Name to ' + ensSubDomainName)\n  }\n\n  const handleEnsSubdomainSubmit = (evt) => {\n    evt.preventDefault();\n    registerEnsSubDomain()\n  }\n\n  const handleEnsDomainChange = evt => {\n    setEnsDomainName(evt.target.value)\n    setEnsDomainAvailable(true)\n    console.log('Setting ENS Domain Name to ' + ensDomainName)\n  }\n\n  const handleEnsDomainSubmit = (evt) => {\n    evt.preventDefault();\n    registerEnsDomain()\n    .catch(error => {\n      setEnsSpinner({state:'',per:0})\n      console.log(error)\n    })\n  }\n  async function registerEnsSubDomain()\n  {\n    const signer = context.library.getSigner()\n    var names = ensSubDomainName.split('.')\n    var subdomainNameHash = ethers.utils.keccak256(ethers.utils.toUtf8Bytes(names[0]))\n    var domainNameHash = ethers.utils.namehash(names[1] + '.' + names[2])\n    console.log(subdomainNameHash)\n    const registrar = new ethers.Contract('0x112234455c3a32fd11230c42e7bccd4a84e02010', registrarAbi, signer)\n    setEnsSpinner({state:'Registering subdomain',per:33})\n    var txid = await registrar.setSubnodeOwner(domainNameHash,subdomainNameHash,registrar.owner(domainNameHash))\n    console.log(txid)\n    await txid.wait()\n    setEnsSpinner({state:'Setting Resolver',per:66})\n    txid = await registrar.setResolver(ethers.utils.namehash(ensSubDomainName),'0x5FfC014343cd971B7eb70732021E26C35B744cc4')\n    console.log(txid)\n    setEnsSpinner({state:'Domain Registered',per:100})\n    setDomain(ensSubDomainName)\n  }\n\n  async function registerEnsDomain()\n  {\n    const signer = context.library.getSigner()\n    const provider = ethers.getDefaultProvider()\n    console.log(\"ENS Domain Name Hash is \" + ensDomainName)\n    const ethController = new ethers.Contract('0x357DBd063BeA7F0713BF88A3e97B7436B0235979', ethControllerAbi, signer)\n    var domainName = ensDomainName.split('.')[0]\n    var txid = await ethController.available(domainName)\n    console.log(txid)\n    if (txid === false) {\n      setEnsDomainAvailable(false)\n      return console.log('Domain name unavailable')\n    }\n    var commitSecret = ethers.utils.formatBytes32String(domainName)\n    var commitmentHash = await ethController.makeCommitment(domainName, signer._address, commitSecret)\n    console.log(\"The commit hash for this registration request is \" + commitmentHash + \" and the commit secret is \" + commitSecret)\n    var rentPrice = await ethController.rentPrice(domainName, 31535999)\n    console.log('ENS Domain Name Rent Price: ' + rentPrice)\n    setEnsSpinner({state: \"Committing Domain\", per:33})\n    txid = await ethController.commit(commitmentHash)\n    console.log(txid)\n    await txid.wait()\n    var minCommitTimeBN = await ethController.minCommitmentAge()\n    var minCommitTime = minCommitTimeBN.toNumber()\n    await new Promise(resolve => setTimeout(resolve, minCommitTime*1000))\n    console.log('Waited ' + minCommitTime + ' seconds')\n    var gasPrice = await provider.getGasPrice()\n    setEnsSpinner({state: \"Registering Domain\", per:66})\n    txid = await ethController.register(domainName, signer._address, ethers.utils.bigNumberify(31535999), commitSecret, { value: rentPrice, gasLimit: 300000, gasPrice: gasPrice })\n    await txid.wait()\n    console.log(\"Registered \" + ensDomainName + \" with transaction \" + txid)\n    const registrar = new ethers.Contract('0x112234455c3a32fd11230c42e7bccd4a84e02010', registrarAbi, signer)\n    setEnsSpinner({state: \"Setting Resolver\", per:90})\n    txid = await registrar.setResolver(ethers.utils.namehash(ensDomainName),'0x5FfC014343cd971B7eb70732021E26C35B744cc4')\n    await txid.wait()\n    console.log(txid)\n    setEnsSpinner({state: \"Domain Registered\", per:100})\n    setDomain(ensDomainName)\n }\n\n  if (context.active && (context.connectorName !== 'Network')){\n  return (\n  <Container>\n      <Row>\n        <Col>\n          <Form onSubmit={handleEnsDomainSubmit}>\n            <FormControl\n              placeholder=\"alice.eth\"\n              aria-label=\"ENSDomain\"\n              type='text'\n              value={ensDomainName}\n              onChange={handleEnsDomainChange}\n              aria-describedby=\"basic-addon1\"\n            />\n              <Form.Text className=\"text-muted\">\n                3 Transactions - Commit; Register Domain; Set resolver\n              </Form.Text>\n          <div className='container pt-2 text-center '>\n            <Button type=\"submit\" disabled={ensSpinner.per > 0}>\n              {(ensSpinner.per > 0) ? 'Registering Domain' : 'Register Domain'}</Button>\n            <Alert show={!ensDomainAvailable} key='domainalert' variant='danger'>\n              That ENS domain name is not available\n            </Alert>\n          </div>\n        </Form>\n        </Col>\n      <Col>\n        <Form onSubmit={handleEnsSubdomainSubmit}>\n          <FormControl\n            type=\"text\"\n            value={ensSubDomainName}\n            onChange={handleEnsSubDomainChange}\n            placeholder=\"bob.alice.eth\"\n            className=\" mr-sm-2\" />\n          <Form.Text className=\"text-muted\">\n            2 Transactions - Register Subdomain; Set resolver\n           </Form.Text>\n           <div className='container pt-2 text-center '>\n            <Button type=\"submit\" disabled={ensSpinner.per > 0}>Register Subdomain</Button>\n          </div>\n        </Form>\n        </Col>\n        </Row>\n      <Row>\n        {ensSpinner.per > 0 && <div className='container text-center'>\n        <ProgressBar now={ensSpinner.per} label={ensSpinner.state} /></div>}\n      </Row>\n      {ensSpinner.per === 100 && \n      <Row>\n          <Col>\n            <SetArweaveComponent domainName={domain} txid={props.txid} ipfsCid={props.ipfsCid}/>\n          </Col>\n      </Row>}\n   </Container>\n\n  )}\n  else return null\n}\n\nexport default ENSRegistrationComponent;\n","import React, { useCallback, useMemo } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport Arweave from 'arweave/web';\nimport { useWeb3Context } from \"web3-react\";\nimport ENSRegistrationComponent from './ENSRegistrationComponent.js';\nimport Unixfs from 'ipfs-unixfs';\nconst ipid = require('ipld-dag-pb')\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 1,\n    borderRadius: 1,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  };\n  \n  const activeStyle = {\n    borderColor: '#2196f3'\n  };\n  \n  const acceptStyle = {\n    borderColor: '#00e676'\n  };\n  \n  const rejectStyle = {\n    borderColor: '#ff1744'\n  };\n\nfunction ArweaveComponent (props)\n{\n\n\n    const context = useWeb3Context();\n    const [wallet, setWallet] = React.useState()\n    const [balance, setBalance] = React.useState()\n    const [data, setData] = React.useState()\n    const [arweaveTxn, setTxn] = React.useState('')\n    const [cid, setCid] = React.useState()\n\n    React.useEffect(() => {\n        if (wallet){\n            var walletBalance = getBalance(wallet)\n            .then(result => setBalance(result))\n        }\n    })\n\n    var arw = Arweave.init({\n      host: 'arweave.net',\n      port: 443,\n      protocol: 'https',\n    });\n\n    const onDrop = useCallback(acceptedFiles => {\n        console.log(acceptedFiles);\n        const reader = new FileReader()\n\n\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = function(event) {\n            if (acceptedFiles[0].type === \"application/json\"){\n                var key = JSON.parse(event.target.result)\n                var address = arw.wallets.jwkToAddress(key)\n                .then(address => {\n                    setWallet({'privateKey':key, 'address':address})\n                })\n            }\n            else {\n                var contents = event.target.result\n                setData(contents)\n                var file = new Unixfs('file',contents)\n                var node = new ipid.DAGNode(file.marshal());\n                ipid.util.cid(ipid.util.serialize(node), {cidVersion:0})\n                .then(ipfsCid => {\n                  setCid(ipfsCid.toBaseEncodedString())\n                  console.log('IPFS CID for this transaction is: ' + cid)\n                  generateTransaction(wallet.privateKey, contents, {'name':'Content-Type', 'value':acceptedFiles[0].type, 'cid':ipfsCid})\n                .then(txn => setTxn(txn))\n                })\n            }\n        }\n        reader.readAsText(acceptedFiles[0])\n \n      }, [wallet, data]);\n    \n    const { isDragActive, isDragAccept, getRootProps, getInputProps, isDragReject, acceptedFiles } = useDropzone({\n      onDrop,\n      accept: 'application/json , text/html , text/plain',\n      });\n\n    async function getBalance(wallet) {\n        var balance = await arw.wallets.getBalance(wallet.address)\n        console.log('Wallet balance is currently ' + arw.ar.winstonToAr(balance))\n        return balance\n    }\n    \n    async function generateTransaction(privateKey, fileData, tags) {\n        console.log(fileData)\n        let transaction = await arw.createTransaction({ data : fileData }, privateKey)\n        transaction.addTag(tags.name, tags.value)\n        transaction.addTag('IPFS-Add',tags.cid)\n        console.log('This transaction will cost ' + transaction.reward + ' winston')\n        await arw.transactions.sign(transaction, wallet.privateKey)\n        console.log(transaction)\n        return transaction\n    }\n\n    async function postTransaction(transaction){\n\n        console.log(transaction)\n        const response = await arw.transactions.post(transaction)\n        console.log(response)\n        setData()\n        return response.status\n    }\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n      }), [\n        isDragActive,\n        isDragReject\n      ]);\n\n\n    if (context.active && (context.connectorName !== 'Network')){\n    return (\n        <React.Fragment>\n          <div className='container mt-3 text-center'><h3>Arweave registration/file deployment</h3></div>\n          {!wallet && <div className=\"container text-center mt-5\">\n            <div {...getRootProps({style})}>\n                <input {...getInputProps()} />\n                {!isDragActive && 'Click here or drop your Arweave keyfile here to connect to Arweave'}\n                {isDragActive && !isDragReject && \"Drop keyfile here\"}\n                {isDragReject && \"Please only drop your keyfile \"}\n            </div>\n          </div>}\n          <div className='container text-left'>\n              {wallet && <p>Arweave wallet address: {wallet.address}</p>}\n          </div>\n          <div className='container text-left'>\n              {balance && <p>Arweave wallet balance: {balance} winston</p>}\n          </div>\n          \n          {wallet && balance && !data && <div className=\"container text-center mt-5\">\n            <div {...getRootProps({style})}>\n                <input {...getInputProps()} />\n                {!isDragActive && 'Click here or drop a file to deploy to Arweave.'}\n                {isDragActive && !isDragReject && \"Drop file here\"}\n                {isDragReject && \"Please only drop HTML or Text files here\"}\n            </div>\n          </div>}\n          {arweaveTxn && \n            <ul>\n                <li>Transaction ID: <a href={\"https://arweave.net/tx/\" + arweaveTxn.id} target=\"_blank\">{arweaveTxn.id}</a></li> \n                <li>Transaction Cost: {arweaveTxn.reward} winston</li>\n                <li>IPFS CID: {cid}</li>\n            </ul>\n            }\n          <Row>{arweaveTxn && \n          <Col><div className=\"container pt-1\">\n           <Button \n                key='submitTxn'\n                onClick={() => postTransaction(arweaveTxn)}\n                >Submit Transaction\n            </Button></div></Col>}\n            {arweaveTxn && <Col><div className=\"container pt-1\"><Button\n                key='reset'\n                onClick={() => {\n                    setData()\n                    setTxn('')    \n                }}\n                >Start Over</Button></div></Col>\n            }</Row>\n          {(arweaveTxn !== '') && <Row>\n              <ENSRegistrationComponent txid={arweaveTxn.id} ipfsCid={cid} />\n          </Row>}\n        </React.Fragment>\n    )}\n    else return null\n}\n\nexport default ArweaveComponent\n","import React from 'react';\nimport { ethers } from \"ethers\";\nimport { useWeb3Context } from \"web3-react\";\nimport GetArweaveResource from './GetArweaveResource.js'\nimport { abi } from \"../PublicResolver\"\n\nfunction ArweaveRouterComponent (props) {\n  const context = useWeb3Context();\n  const [arweaveURL, setarweaveURL] = React.useState('none')\n  const [ensDomainName, setEnsDomainName] = React.useState(props.domainName)\n\n  function getArweaveFromENS ()  {\n    var nameHash = ethers.utils.namehash(ensDomainName)\n    const publicResolver = new ethers.Contract('0x5FfC014343cd971B7eb70732021E26C35B744cc4', abi, context.library)\n    publicResolver.text(nameHash,'url')\n    .then(link => {\n      console.log(link)\n      setarweaveURL(link)\n    })\n    .catch(error => {\n      console.log(error)\n      setarweaveURL('none')\n    })\n\n  }\n\n  if (context.active){\n    getArweaveFromENS()\n    return (\n      <React.Fragment>\n        <GetArweaveResource arweaveHash={arweaveURL} source='router'/>\n      </React.Fragment>\n    )\n  }\n  else return <p>No Web3 connection found</p>\n}\n\nexport default ArweaveRouterComponent;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Web3Provider from \"web3-react\";\nimport connectors from \"./Connectors.js\";\nimport ActivateConnectors from \"./components/ActivateConnectors.js\";\nimport ArweaveComponent from \"./components/ArweaveComponent.js\";\nimport ArweaveRouterComponent from \"./components/ArweaveRouterComponent\"\nimport \"./index.css\";\nimport { Container, Row, Col } from 'react-bootstrap';\n\n\nfunction App() {\n  return (\n    <HashRouter>\n    <Switch>\n    <Route exact path=\"/\" render={() =>\n    <Web3Provider connectors={connectors} libraryName=\"ethers.js\">\n      <Container className=\"App\">\n        <Row><div className='container text-center'><h1>ArwENS</h1></div></Row>\n        <Row><div className='container text-center'>A simple Dapp for registering ENS domains and linking to content hosted on Arweave</div></Row>\n        <Row>\n          <Col>\n            <ActivateConnectors />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ArweaveComponent />\n          </Col>\n        </Row>\n\n\n      </Container>\n    </Web3Provider>}/>\n    <Route path=\"/:id\" render={(routeProps) =>       \n      <Web3Provider connectors={connectors} libraryName=\"ethers.js\">\n        <Row><Col>\n            <ActivateConnectors source='router'/>\n            <ArweaveRouterComponent domainName={routeProps.match.params.id} />\n        </Col></Row>\n      </Web3Provider>\n    }\n      /> \n    </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}